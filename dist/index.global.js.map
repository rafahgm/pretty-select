{"version":3,"sources":["../src/index.ts"],"sourcesContent":["declare global {\r\n    interface Window { Select: any; }\r\n}\r\n\r\nclass Select {\r\n    elemento?: HTMLSelectElement;\r\n    opcoes: Array<Opcao> = [];\r\n\r\n    constructor(elemento: HTMLSelectElement | string, opcoes: OpcoesSelect) {\r\n        if (typeof (elemento) === \"string\" && document.querySelector(elemento)) {\r\n            this.elemento = document.querySelector(elemento) as HTMLSelectElement;\r\n        } else if (elemento instanceof HTMLSelectElement) {\r\n            this.elemento = elemento;\r\n        } else {\r\n            throw new Error('elemento precisa ser um HTMLSelectElement ou um seletor CSS');\r\n        }\r\n\r\n        // Esconde select original\r\n        this.elemento.classList.add('select--escondido');\r\n\r\n        // Verifica se o select original possui opções\r\n        [...this.elemento.options].forEach(opcao => {\r\n            this.opcoes.push({\r\n                valor: opcao.value,\r\n                texto: opcao.label\r\n            });\r\n        })\r\n\r\n\r\n        this.elemento.insertAdjacentHTML('afterend', `<div class=\"select__wrapper\">\r\n        <div class=\"select__controle\">\r\n            <input type=\"text\" class=\"select__controle__pesquisa\" spellcheck=\"false\" placeholder=\"${opcoes.placeholder ?? \" \"}\" autocomplete=\"off\" tabindex=\"0\" role=\"combobox\" id=\"select-pesquisa\" />\r\n        </div>\r\n        <div class=\"select__dropdown\">\r\n        ${this.geraHTMLOpcoes()}\r\n        </div>\r\n        </div>`);\r\n\r\n        // Configura eventos\r\n\r\n        document.querySelector<HTMLInputElement>('#select-pesquisa')?.addEventListener('input', function () {\r\n            let opcoesEncontradas = 0;\r\n            \r\n            // Remove o texto de nada encontrado\r\n            document.querySelectorAll<HTMLSpanElement>(\".select__dropdown span[data-nada]\").forEach(span => {\r\n                span.remove();\r\n            });\r\n\r\n            // Percorre pelas opções procurando o texto digitado\r\n            document.querySelectorAll<HTMLSpanElement>(\".select__dropdown span\").forEach(opcao => {\r\n                if(this.value.length > 0) {\r\n                    const stringOriginal = opcao.textContent ?? '';\r\n                    const stringNormalizada = stringOriginal.normalize('NFD').replace(/\\p{Diacritic}/gu, '');\r\n                    const pesquisaNormalizada = this.value.normalize('NFD').replace(/\\p{Diacritic}/gu, '');\r\n    \r\n                    const index = stringNormalizada.toUpperCase().indexOf(pesquisaNormalizada.toUpperCase());\r\n    \r\n                    if (pesquisaNormalizada.length === 0) {\r\n                        // Restaura os textos\r\n                        opcao.innerHTML = opcao.dataset.texto ?? '';\r\n                    }\r\n        \r\n                    if (index > -1) {\r\n                        opcao.style.display = \"inline-block\";\r\n    \r\n                        //Substitui o conteudo do span pelo highlight\r\n                        const token = stringOriginal.slice(index, index + this.value.length);\r\n                        const depois = stringOriginal.slice(stringOriginal.indexOf(token) + this.value.length);\r\n                        const antes = stringOriginal.slice(0, stringOriginal.indexOf(token));\r\n                        console.log({antes, depois});\r\n                        opcao.innerHTML = antes + `<mark>${token}</mark>` + depois;\r\n                        opcoesEncontradas++;\r\n                    } else {\r\n                        opcao.style.display = \"none\";\r\n                        opcao.innerHTML = opcao.dataset.texto ?? '';\r\n                    }\r\n                }else {\r\n                    // Restaura todos\r\n                    opcao.style.display = 'inline-block';\r\n                    opcao.innerHTML = opcao.dataset.texto ?? '';\r\n                }\r\n            });\r\n\r\n            if(opcoesEncontradas === 0 && this.value.length > 0) {\r\n                document.querySelector(\".select__dropdown\")?.insertAdjacentHTML('beforeend', '<span data-nada>Nenhuma opção encontrada</span>');\r\n            } \r\n        })\r\n    }\r\n\r\n    private geraHTMLOpcoes(): string {\r\n        let html = '';\r\n        this.opcoes.forEach(opcao => {\r\n            html += `<span data-valor=\"${opcao.valor}\" data-texto=\"${opcao.texto}\">${opcao.texto}</span>`\r\n        });\r\n\r\n        return html;\r\n    }\r\n}\r\n\r\nwindow.Select = Select;\r\nexport default Select;"],"mappings":";;;;AAIA,MAAM,SAAN,MAAa;AAAA,IAIT,YAAY,UAAsC,QAAsB;AAFxE,oBAAuB,CAAC;AAN5B;AASQ,UAAI,OAAQ,aAAc,YAAY,SAAS,cAAc,QAAQ,GAAG;AACpE,aAAK,WAAW,SAAS,cAAc,QAAQ;AAAA,MACnD,WAAW,oBAAoB,mBAAmB;AAC9C,aAAK,WAAW;AAAA,MACpB,OAAO;AACH,cAAM,IAAI,MAAM,6DAA6D;AAAA,MACjF;AAGA,WAAK,SAAS,UAAU,IAAI,mBAAmB;AAG/C,OAAC,GAAG,KAAK,SAAS,OAAO,EAAE,QAAQ,WAAS;AACxC,aAAK,OAAO,KAAK;AAAA,UACb,OAAO,MAAM;AAAA,UACb,OAAO,MAAM;AAAA,QACjB,CAAC;AAAA,MACL,CAAC;AAGD,WAAK,SAAS,mBAAmB,YAAY;AAAA;AAAA,qGAE+C,YAAO,gBAAP,YAAsB,GAAG;AAAA;AAAA;AAAA,UAGnH,KAAK,eAAe,CAAC;AAAA;AAAA,eAEhB;AAIP,qBAAS,cAAgC,kBAAkB,MAA3D,mBAA8D,iBAAiB,SAAS,WAAY;AAxC5G,YAAAA;AAyCY,YAAI,oBAAoB;AAGxB,iBAAS,iBAAkC,mCAAmC,EAAE,QAAQ,UAAQ;AAC5F,eAAK,OAAO;AAAA,QAChB,CAAC;AAGD,iBAAS,iBAAkC,wBAAwB,EAAE,QAAQ,WAAS;AAjDlG,cAAAA,KAAAC,KAAA;AAkDgB,cAAG,KAAK,MAAM,SAAS,GAAG;AACtB,kBAAM,kBAAiBD,MAAA,MAAM,gBAAN,OAAAA,MAAqB;AAC5C,kBAAM,oBAAoB,eAAe,UAAU,KAAK,EAAE,QAAQ,WAAC,kBAAc,IAAE,GAAE,EAAE;AACvF,kBAAM,sBAAsB,KAAK,MAAM,UAAU,KAAK,EAAE,QAAQ,WAAC,kBAAc,IAAE,GAAE,EAAE;AAErF,kBAAM,QAAQ,kBAAkB,YAAY,EAAE,QAAQ,oBAAoB,YAAY,CAAC;AAEvF,gBAAI,oBAAoB,WAAW,GAAG;AAElC,oBAAM,aAAYC,MAAA,MAAM,QAAQ,UAAd,OAAAA,MAAuB;AAAA,YAC7C;AAEA,gBAAI,QAAQ,IAAI;AACZ,oBAAM,MAAM,UAAU;AAGtB,oBAAM,QAAQ,eAAe,MAAM,OAAO,QAAQ,KAAK,MAAM,MAAM;AACnE,oBAAM,SAAS,eAAe,MAAM,eAAe,QAAQ,KAAK,IAAI,KAAK,MAAM,MAAM;AACrF,oBAAM,QAAQ,eAAe,MAAM,GAAG,eAAe,QAAQ,KAAK,CAAC;AACnE,sBAAQ,IAAI,EAAC,OAAO,OAAM,CAAC;AAC3B,oBAAM,YAAY,QAAQ,SAAS,KAAK,YAAY;AACpD;AAAA,YACJ,OAAO;AACH,oBAAM,MAAM,UAAU;AACtB,oBAAM,aAAY,WAAM,QAAQ,UAAd,YAAuB;AAAA,YAC7C;AAAA,UACJ,OAAM;AAEF,kBAAM,MAAM,UAAU;AACtB,kBAAM,aAAY,WAAM,QAAQ,UAAd,YAAuB;AAAA,UAC7C;AAAA,QACJ,CAAC;AAED,YAAG,sBAAsB,KAAK,KAAK,MAAM,SAAS,GAAG;AACjD,WAAAD,MAAA,SAAS,cAAc,mBAAmB,MAA1C,gBAAAA,IAA6C,mBAAmB,aAAa;AAAA,QACjF;AAAA,MACJ;AAAA,IACJ;AAAA,IAEQ,iBAAyB;AAC7B,UAAI,OAAO;AACX,WAAK,OAAO,QAAQ,WAAS;AACzB,gBAAQ,qBAAqB,MAAM,KAAK,iBAAiB,MAAM,KAAK,KAAK,MAAM,KAAK;AAAA,MACxF,CAAC;AAED,aAAO;AAAA,IACX;AAAA,EACJ;AAEA,SAAO,SAAS;AAChB,MAAO,cAAQ;","names":["_a","_b"]}